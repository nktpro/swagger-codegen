swagger: '2.0'
info:
  title: Chop APIs
  version: 1.0.0
host: o.getchop.io
schemes:
  - http
basePath: /api
produces:
  - application/json
paths:
  '/users/login':
    post:
      summary: Login
      operationId: login
      responses:
        '200':
          description: Login
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  '/merchants':
    get:
      summary: Merchants
      operationId: getMerchants
      responses:
        '200':
          description: Merchant
          schema:
            type: array
            items:
              $ref: '#/definitions/Merchant'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
          - apiKey: []
            
  '/merchants/{id}':
    get:
      summary: Merchants
      operationId: getMerchantById
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Merchant
          schema:
            $ref: '#/definitions/Merchant'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/another/endpoint':
    post:
      summary: just testing
      operationId: justTesting
      parameters:
        - name: id
          in: formData
          type: string
        - name: whatever
          in: formData
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: string
            example: Good
            
securityDefinitions:
  apiKey:
    type: apiKey
    name: API-Token
    in: header
      
definitions:
  User:
    type: object
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      avatar:
        type: string
        
  Merchant:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
      address:
        type: string
      image:
        type: string
      location:
        type: string
      hours:
        type: string
      phoneNumber:
        type: string
      foo:
        type: boolean
      items:
        type: array
        items:
          $ref: '#/definitions/Item'
  Item:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      optionSets:
        type: array
        items:
          $ref: '#/definitions/OptionSet'
  OptionSet:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      maxSelections:
        type: integer
      minSelections:
        type: integer
      options:
        type: array
        items:
          $ref: '#/definitions/Option'
  Option:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: integer
  Error:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
